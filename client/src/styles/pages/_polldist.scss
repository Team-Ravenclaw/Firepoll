//Colors
$background: #fefefe;
$text: #4b507a;
$cyan: #60daaa;
$yellow: #fbca67;
$orange: #ff8a30;
$red: #C20114;
$purple: #6477b9;
$blue: #0eb7da;
$grey: rgb(206, 206, 206);
$lightGrey: #F5F5F5;
$white: #ffffff;

#poll-dist {
  background-color: #36454F;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: -3rem;

  .loading-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 80%;
    width: 100%;
  }

  circle {
    fill: white;
    stroke: $red;
    stroke-width: 4;
    stroke-dasharray: 250;
    stroke-dashoffset: 1000;
    animation: rotate 2s cubic-bezier(0.39, 0.575, 0.565, 1) infinite, change-color 4s 0.7s linear infinite;
  }
  
  @keyframes rotate {
    to {
      stroke-dashoffset: 500;
    }
  }

  @keyframes change-color {
    49% {
      stroke: $red;
    }

    50% {
      stroke: $yellow;
    }

    99% {
      stroke: $yellow;
    }

    100% {
      stroke: $red;
    }
  }

  .loader-rotate {
    animation: spin 3s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  div {
    font-family: Roboto;
  }

  .flex {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .title {
    color: #DD403A;
    font-size: 1em;
    margin-top: 2vh;
    padding-left: 2vw;
  }

  .response-form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 80vh;
    width: 80vw;
    margin: 10px auto; 
    background-color: rgb(255, 255, 255);
    font-size: 400%;
  }

  .answer.draw.meet.question-intro {
    display: flex;
    vertical-align: center;
    justify-content: center;
    padding: 1em;
    font-size: 1em;
    width: 60%;
    max-height: 70%;
    transition: margin 0.3s 0.1s flex-grow 0.2s 0.1s, height 0.3s 0.1s, font-size 0.3s, width 0.5s 0.35s;
    margin: 1vh auto;
  }

  .answer.draw.meet.question-intro.slide-out {
    flex-grow: .005;
    font-size: 0;
    height: 1%;
    width: 0%;
    transition: flex-grow 0.3s 0.1s, font-size 0.2s 0.1s, width 0.5s 0.35s;
  }

  .question-title {
    min-height: 15%;
    display: flex;
    align-items: center;
    color: #DD403A;
    box-shadow: inset 0 0 0 2px $red;
    width: 90%;
    font-size: 0.7em;
    margin-top: 3em;
    margin-bottom: 0.7em;
    padding: 0.2em;
    padding-left: 0.5em;
    font-style: italic;
  }

  .question-container {
    height: 100%;
    width: 90%;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
  }

  .question-container.with-status {
    height: 100%;
    width: 90%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    overflow: scroll;
  }

  .question {
    height: 85%;
    width: 90%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .question-number {
    font-size: 1em;
  }

  .question-result-container {
    width: 80%;
    margin-bottom: 0.2em;
    text-align: left;
  }

  .question-result-title {
    font-size: 0.5em;
  }

  .poll-results-title {
    font-size: 1em;
    color: $red;
    margin-top: 0.7em;
    margin-bottom: 0.7em;
  }

  .result-interactive {
    background-color: $red;
    padding-left: 0.4em;
    height: 7%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 0.5em;
    display: flex;
    color: $white;
    max-height: 1.9em;
    transition: width 1.5s;
    margin: 1em 0;
  }

   
  .result-interactive.not-yet {
    background-color: $grey;
    height: 3%;
    width: 8em;
  }

  .result-overflow {
    max-width: 90%;
    overflow: hidden;
    white-space: nowrap;
    margin-right: 1em;
  }

  .answer {
    right: 200vw;
    margin: 0.4em 0; 
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.5em;
    width: 80%;
    flex-grow: 0.28;
    animation: slidein 1.5s forwards;
    transition: color 0.3s background-color 200ms linear, width 0.5s, font-size 0.5s, height 0.5s;
  }

  .answer.answer-selected.draw.meet {
    color: #ffffff;
    border-color: #ffffff;
    background-color: $red;
    animation: slidein 1s forwards;
    transition: color 0.3s, background-color 300ms linear, width 0.3s, font-size 0.3s, height 0.5s, border-radius 0.5s;
  }

  .answer-selected:hover {
    color: $yellow;
    transition: color 0.5s, background-color 300ms
  }

  @-webkit-keyframes slidein {
    100% { right: 0; }
  }

  @keyframes slidein {
      100% { right: 0; }
  }

  @-webkit-keyframes slideout {
    100% { right: 100; }
  }

  @keyframes slideout {
    100% { right: 100; }
  }


  .answer:hover:not(.answer-selected) {
    transition: background-color 100ms linear,  font-size 0.8s;
  }

  .answer {
    .answer-position {
      font-size: 0.6em;
      display: flex;
      justify-content: center;
      align-items: center;
      border: 2px solid $red; /* Light grey */
      border-left: 2px solid $yellow; /* Blue */
      border-radius: 50%;
      height: 1.7em;
      width: 1.7em;
      position: absolute;
      left: 5%;
      margin-right: 2em;
      transition: border 0.3s;
    }
  }

  .answer.answer-selected {
    .answer-position {
      border: 2px solid $white; /* Light grey */
      border-right: 2px solid $red; /* Blue */
      transition: border 0.3s;
      color: $white;
    }
  } 

  .loader {
    border: 5px solid $red;
    border-top: 5px solid $yellow;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
    margin-bottom: 20px;
  }

  .status {
    margin-top: 30px;
    color: $red;
  }
  
  @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
  }

  .draw.meet.submit {
    min-width: 30%;
    min-height: 10%;
    margin-bottom: 3em;
  }
  
  // Basic styles
  button, .answer, .answer-selected {
    background: none;
    border: 0;
    box-sizing: border-box;
    
    // Using inset box-shadow instead of border for sizing simplicity
    box-shadow: inset 0 0 0 2px $red;
    color: $red;
    font-size: 0.7em;
  
    // Required, since we're setting absolute on pseudo-elements
    position: relative;
  
    &::before,
    &::after {
      box-sizing: inherit;
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
    }
  }
  
  button.draw {
    margin: 0.7em;
  }
  
  .draw {
      transition: color 0.25s;
  
    &::before,
    &::after {
      // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
      border: 2px solid transparent;
      width: 0;
      height: 0;
    }
  
    // This covers the top & right borders (expands right, then down)
    &::before {
      top: 0;
      left: 0;
    }
  
    // And this the bottom & left borders (expands left, then up)
    &::after {
      bottom: 0;
      right: 0;
    }
    
    &:hover {
      color: $cyan;
    }
  
    // Hover styles
    &:hover::before,
    &:hover::after {
      width: 100%;
      height: 100%;
    }
  
    &:hover::before {
      border-top-color: $cyan; // Make borders visible
      border-right-color: $cyan;
      transition:
        width 0.25s ease-out, // Width expands first
        height 0.25s ease-out 0.25s; // And then height
    }
  
    &:hover::after {
      border-bottom-color: $cyan; // Make borders visible
      border-left-color: $cyan;
      transition:
        border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
        width 0.25s ease-out 0.5s, // And then exanding width
        height 0.25s ease-out 0.75s; // And finally height
    }
  }
  
  // Inherits from .draw
  .meet {
    
    &:hover {
      color: $yellow;
    }
  
    // Start ::after in same position as ::before
    &::after {
      top: 0;
      left: 0;
    }
  
    // Change colors
    &:hover::before {
      border-top-color: $yellow;
      border-right-color: $yellow;
    }
  
    &:hover::after {
      border-bottom-color: $yellow;
      border-left-color: $yellow;
      transition: // Animate height first, then width
        height 0.25s ease-out,
        width 0.25s ease-out 0.25s;
    }
  
  }
  
  // Does not inherit
  .center {
    &:hover {
      color: $purple;
    }
  
    // Set up base styles, we're going to scale instead of animating width/height
    &::before,
    &::after {
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      transform-origin: center; // Ensure scaling is done from the center (expands outwards)
    }
  
    // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
    &::before {
      border-top: 2px solid $purple;
      border-bottom: 2px solid $purple;
      transform: scale3d(0,1,1); // Shrink only width
    }
  
    &::after {
      border-left: 2px solid $purple;
      border-right: 2px solid $purple;
      transform: scale3d(1,0,1); // Shrink only height
    }
  
    &:hover::before,
    &:hover::after {
      transform: scale3d(1,1,1); // Show full-size
      transition: transform 0.5s;
    }
  }

}

#poll-hr {
  color: $red;
  border-color: $red;
  background-color: $red;
  height: 1px; border: 0;
  padding: 1px;
}