//Colors
$background: #fefefe;
$text: #4b507a;
$cyan: #60daaa;
$yellow: #fbca67;
$orange: #ff8a30;
$red: #C20114;
$purple: #6477b9;
$blue: #0eb7da;
$grey: rgb(206, 206, 206);
$lightGrey: #F5F5F5;
$white: #ffffff;

#poll-dist {
  background-color: #36454F;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: -3rem;

  div {
    font-family: Roboto;
  }

  .flex {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .title {
    color: #DD403A;
    font-size: 1em;
    margin-top: 2vh;
    padding-left: 2vw;
  }

  .response-form {
    font-size: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 80vh;
    width: 80vw;
    margin: 10px auto; 
    background-color: rgb(255, 255, 255);
  }

  .answer.draw.meet.question-intro {
    font-size: 1em;
    width: 60%;
    max-height: 70%;
    transition: flex-grow 0.3s 0.1s, height 0.3s 0.1s, font-size 0.3s, width 0.5s 0.35s;
    overflow: scroll;
    margin: 1vh auto;
    padding: 1em 1em 1em 1em;
  }

  .answer.draw.meet.question-intro.slide-out {
    flex-grow: .005;
    font-size: 0;
    height: 1%;
    width: 0%;
  }

  .question-title {
    display: flex;
    align-items: center;
    margin: 2vh auto; 
    color: #DD403A;
    box-shadow: inset 0 0 0 2px $red;
    width: 75%;
    font-size: 1em;
    margin-top: 2vh;
    overflow: scroll;
    padding-top: 2.5vh;
    padding-bottom: 2.5vh;
    padding-left: 20px;
    font-style: italic;
  }

  .question-container {
    height: 90%;
    width: 90%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  .question {
    height: 85%;
    width: 90%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .question-number {
    font-size: 1em;
  }

  .answer {
    overflow: scroll;
    right: 200vw;
    margin: 1vh 0.5vw; 
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1em;
    width: 75%;
    flex-grow: 1;
    padding: 1em 1em 1em 1em;
    animation: slidein 1.5s forwards;
    transition: background-color 200ms linear, width 0.5s, font-size 0.5s, height 0.5s;
  }

  .answer-selected {
    color: #ffffff;
    border-color: #ffffff;
    background-color: $red;
    animation: slidein 1s forwards;
    transition: color 0.5s, background-color 100ms linear, width 0.3s, font-size 0.3s, height 0.5s, border-radius 0.5s;
  }

  .answer-selected:hover {
    color: $yellow;
    transition: color 0.5s;
  }

  @-webkit-keyframes slidein {
    100% { right: 0; }
  }

  @keyframes slidein {
      100% { right: 0; }
  }

  @-webkit-keyframes slideout {
    100% { right: 100; }
  }

  @keyframes slideout {
    100% { right: 100; }
  }


  .answer:hover:not(.answer-selected) {
    transition: background-color 100ms linear,  font-size 0.8s;
  }

  .results-container {
    margin-bottom: 20px;
    padding-bottom: 20px;
  }

  .results-title {
    text-decoration: underline;
    margin-top: 20px;
    padding-top: 10px;
  }

}

#poll-hr {
  color: $red;
  border-color: $red;
  background-color: $red;
  height: 1px; border: 0;
  padding: 1px;
}

// Basic styles
button, .answer, .answer-selected {
  background: none;
  border: 0;
  box-sizing: border-box;
  padding: 1em 2em;
  
  // Using inset box-shadow instead of border for sizing simplicity
  box-shadow: inset 0 0 0 2px $red;
  color: $red;
  font-size: inherit;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

button.draw, .answer.draw {
  margin: 2em;
}

.draw {
    transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }
  
  &:hover {
    color: $cyan;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $cyan; // Make borders visible
    border-right-color: $cyan;
    transition:
      width 0.25s ease-out, // Width expands first
      height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: $cyan; // Make borders visible
    border-left-color: $cyan;
    transition:
      border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
      width 0.25s ease-out 0.5s, // And then exanding width
      height 0.25s ease-out 0.75s; // And finally height
  }
}

// Inherits from .draw
.meet {
  
  &:hover {
    color: $yellow;
  }

  // Start ::after in same position as ::before
  &::after {
    top: 0;
    left: 0;
  }

  // Change colors
  &:hover::before {
    border-top-color: $yellow;
    border-right-color: $yellow;
  }

  &:hover::after {
    border-bottom-color: $yellow;
    border-left-color: $yellow;
    transition: // Animate height first, then width
      height 0.25s ease-out,
      width 0.25s ease-out 0.25s;
  }

}

// Does not inherit
.center {
  &:hover {
    color: $purple;
  }

  // Set up base styles, we're going to scale instead of animating width/height
  &::before,
  &::after {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    transform-origin: center; // Ensure scaling is done from the center (expands outwards)
  }

  // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
  &::before {
    border-top: 2px solid $purple;
    border-bottom: 2px solid $purple;
    transform: scale3d(0,1,1); // Shrink only width
  }

  &::after {
    border-left: 2px solid $purple;
    border-right: 2px solid $purple;
    transform: scale3d(1,0,1); // Shrink only height
  }

  &:hover::before,
  &:hover::after {
    transform: scale3d(1,1,1); // Show full-size
    transition: transform 0.5s;
  }
}